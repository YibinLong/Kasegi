rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    function owner() {
      return request.resource.data.owner;
    }
    
    function me() {
      return request.auth.uid;
    }

    function isSignedIn() {
      return request.auth != null 
        && request.auth.uid is string
    }

    function isValidPost() {
      return request.resource.data.keys().hasAll(['owner', 'message', 'timestamp'])
        && request.resource.data.message is string
        && request.resource.data.timestamp is timestamp;
    }


    match /users/{user} {
      match /private/{anything=**} {
        allow read, write: if isSignedIn() && user == me();
      }

      match /public/{anything=**} {
        allow read: if isSignedIn();
        allow write: if isSignedIn() && user == me();
      }

      allow create : if request.auth == null;
      allow read: if isSignedIn();
    }

    match /posts/{document=**} {
      allow read: if isSignedIn();
      allow create : if isSignedIn() && owner() == me();
    }
  }
}